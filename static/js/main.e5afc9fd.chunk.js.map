{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","helpers.ts","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","sex","slug","to","cn","PeopleTable","peoples","selectedPersonSlug","length","map","born","died","fatherName","motherName","mother","father","PeoplePage","useState","setPeoples","isLoading","setIsLoading","error","setError","useParams","useEffect","catch","visiblePeoples","find","p","getDetailsOfParents","PageNotFound","App","role","isActive","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"qQAEaA,EAAe,kBAC1B,oBAAIC,UAAU,QAAd,sBAD0B,E,cCAfC,G,MAAS,kBACpB,qBAAKD,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCOf,SAASE,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCLM,IAAMQ,EAAwB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEpCC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,IACAC,EACEH,EADFG,KAGF,OACE,cAAC,IAAD,CACEC,GAAE,kBAAaD,GACff,UAAWiB,IAAG,gBAAiB,CAC7B,kBAA2B,MAARH,IAHvB,SAMGD,GAGN,EChBYK,EAAyB,SAAC,GAGhC,IAFLC,EAEI,EAFJA,QACAC,EACI,EADJA,mBAEA,OACE,qBAAKpB,UAAU,QAAf,SACE,qBAAKA,UAAU,sBAAf,SACsB,IAAnBmB,EAAQE,OACP,mBAAG,UAAQ,kBAAX,+CAIA,wBACE,UAAQ,cACRrB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGmB,EAAQG,KAAI,SAAAV,GACX,IACEE,EAQEF,EARFE,IACAS,EAOEX,EAPFW,KACAC,EAMEZ,EANFY,KACAC,EAKEb,EALFa,WACAC,EAIEd,EAJFc,WACAX,EAGEH,EAHFG,KACAY,EAEEf,EAFFe,OACAC,EACEhB,EADFgB,OAGF,OACE,qBACE,UAAQ,SACR5B,UAAWiB,IAAG,CACZ,yBAA0BG,IAAuBL,IAHrD,UAOE,6BACE,cAAC,EAAD,CAAYH,OAAQA,MAGtB,6BAAKE,IACL,6BAAKS,IACL,6BAAKC,IACL,6BACGG,EACG,cAAC,EAAD,CAAYf,OAAQe,IAEpB,mCACGD,EAAU,UACJA,GACH,QAIZ,6BACGE,EACG,cAAC,EAAD,CAAYhB,OAAQgB,IAEpB,mCACGH,EAAU,UACJA,GACH,UA3BPV,EAiCV,YAOd,E,OCxFYc,EAAiB,WAC5B,MAA8BC,mBAAmB,IAAjD,mBAAOX,EAAP,KAAgBY,EAAhB,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAA4CC,cAApCrB,YAAR,MAAe,yBAAf,EAEAsB,qBAAU,WACRJ,GAAa,GAEb/B,IACGK,MAAK,SAAAK,GACJmB,EAAWnB,GACXqB,GAAa,EACd,IACAK,OAAM,WACLL,GAAa,GACbE,EAAS,uBACV,GACJ,GAAE,IAEH,IAAMI,EC1B2B,SAACpB,GAClC,OAAOA,EAAQG,KAAI,SAAAV,GACjB,IAAMe,EAASR,EAAQqB,MAAK,SAAAC,GAAC,OAAIA,EAAE5B,OAASD,EAAOc,UAAtB,IACvBE,EAAST,EAAQqB,MAAK,SAAAC,GAAC,OAAIA,EAAE5B,OAASD,EAAOa,UAAtB,IAE7B,OAAO,2BACFb,GADL,IAEEe,SACAC,UAEH,GACF,CDewBc,CAAoBvB,GAE3C,OACE,qCACE,oBAAInB,UAAU,QAAd,yBAECgC,EAEG,cAAC,EAAD,IAEA,mCACGE,EAEG,mBAAG,UAAQ,qBAAqBlC,UAAU,kBAA1C,SACGkC,IAGH,cAAC,EAAD,CACEf,QAASoB,EACTnB,mBAAoBL,QAOrC,EEpDY4B,EAAmB,kBAC9B,oBAAI3C,UAAU,QAAd,2BAD8B,ECYnB4C,EAAU,WACrB,OACE,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACR5C,UAAU,iCACV6C,KAAK,aACL,aAAW,kBAJb,SAME,qBAAK7C,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAW,gBAAG8C,EAAH,EAAGA,SAAH,OAAkB7B,IAAG,cAAe,CAC7C,8BAA+B6B,GADtB,EAGX9B,GAAG,IAJL,kBASA,cAAC,IAAD,CACEhB,UAAW,gBAAG8C,EAAH,EAAGA,SAAH,OAAkB7B,IAAG,cAAe,CAC7C,8BAA+B6B,GADtB,EAGX9B,GAAG,UAJL,2BAYN,sBAAMhB,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAO+C,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOF,KAAK,QAAQE,QAAS,cAAC,EAAD,SAG/B,cAAC,IAAD,CAAOF,KAAK,IAAIE,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOF,KAAK,OAAOE,QAAS,cAAC,IAAD,CAAUjC,GAAG,IAAIkC,SAAO,MACpD,cAAC,IAAD,CAAOH,KAAK,IAAIE,QAAS,cAAC,EAAD,eAMpC,ECtDDE,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.e5afc9fd.chunk.js","sourcesContent":["import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { FC } from 'react';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn('has-text-link', {\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  peoples: Person[];\n  selectedPersonSlug: string;\n}\n\nexport const PeopleTable: FC<Props> = ({\n  peoples,\n  selectedPersonSlug,\n}) => {\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {peoples.length === 0 ? (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        ) : (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {peoples.map(person => {\n                const {\n                  sex,\n                  born,\n                  died,\n                  fatherName,\n                  motherName,\n                  slug,\n                  mother,\n                  father,\n                } = person;\n\n                return (\n                  <tr\n                    data-cy=\"person\"\n                    className={cn({\n                      'has-background-warning': selectedPersonSlug === slug,\n                    })}\n                    key={slug}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{sex}</td>\n                    <td>{born}</td>\n                    <td>{died}</td>\n                    <td>\n                      {mother\n                        ? <PersonLink person={mother} />\n                        : (\n                          <>\n                            {motherName\n                              ? `${motherName}`\n                              : '-'}\n                          </>\n                        )}\n                    </td>\n                    <td>\n                      {father\n                        ? <PersonLink person={father} />\n                        : (\n                          <>\n                            {fatherName\n                              ? `${fatherName}`\n                              : '-'}\n                          </>\n                        )}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\nimport { getDetailsOfParents } from '../../helpers';\n\nexport const PeoplePage: FC = () => {\n  const [peoples, setPeoples] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { slug = 'carolus-haverbeke-1832' } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(person => {\n        setPeoples(person);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setIsLoading(false);\n        setError('Something went wrong');\n      });\n  }, []);\n\n  const visiblePeoples = getDetailsOfParents(peoples);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {isLoading\n        ? (\n          <Loader />\n        ) : (\n          <>\n            {error\n              ? (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  {error}\n                </p>\n              ) : (\n                <PeopleTable\n                  peoples={visiblePeoples}\n                  selectedPersonSlug={slug}\n                />\n              )}\n          </>\n        )}\n    </>\n  );\n};\n","import { Person } from './types';\n\nexport const getDetailsOfParents = (peoples: Person[]): Person[] => {\n  return peoples.map(person => {\n    const mother = peoples.find(p => p.name === person.motherName);\n    const father = peoples.find(p => p.name === person.fatherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n};\n","import { FC } from 'react';\n\nexport const PageNotFound: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { FC } from 'react';\nimport {\n  NavLink,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\n\nexport const App: FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => cn('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => cn('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"*\" element={<PageNotFound />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}