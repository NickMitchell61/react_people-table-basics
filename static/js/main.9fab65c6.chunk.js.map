{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","helpers.ts","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","sex","slug","personLinkClasses","classNames","to","tableColumns","PeopleTable","people","selectedPersonSlug","length","map","column","born","died","fatherName","motherName","mother","father","personRowClasses","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","useParams","useEffect","catch","visiblePeoples","peopleMap","Map","forEach","set","get","getDetailsOfParents","PageNotFound","App","navLinkClasses","isActive","role","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9fab65c6.chunk.js","sourcesContent":["import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { FC } from 'react';\nimport { Person } from '../../types';\n\ninterface PersonLinkInterface {\n  person: Person;\n}\n\nexport const PersonLink: FC<PersonLinkInterface> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  const personLinkClasses = classNames('has-text-link', {\n    'has-text-danger': sex === 'f',\n  });\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={personLinkClasses}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\nconst tableColumns = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n\ninterface PeopleTableInterface {\n  people: Person[];\n  selectedPersonSlug: string;\n}\n\nexport const PeopleTable: FC<PeopleTableInterface> = ({\n  people,\n  selectedPersonSlug,\n}) => {\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {people.length === 0 ? (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        ) : (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                {tableColumns.map(column => (\n                  <th key={column}>\n                    {column}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map(person => {\n                const {\n                  sex,\n                  born,\n                  died,\n                  fatherName,\n                  motherName,\n                  slug,\n                  mother,\n                  father,\n                } = person;\n\n                const personRowClasses = classNames({\n                  'has-background-warning': selectedPersonSlug === slug,\n                });\n\n                return (\n                  <tr\n                    data-cy=\"person\"\n                    className={personRowClasses}\n                    key={slug}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{sex}</td>\n                    <td>{born}</td>\n                    <td>{died}</td>\n                    <td>\n                      {mother\n                        ? <PersonLink person={mother} />\n                        : motherName || '-'}\n                    </td>\n                    <td>\n                      {father\n                        ? <PersonLink person={father} />\n                        : fatherName || '-'}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\nimport { getDetailsOfParents } from '../../helpers';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(person => {\n        setPeople(person);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setIsLoading(false);\n        setError('Something went wrong');\n      });\n  }, []);\n\n  const visiblePeoples = getDetailsOfParents(people);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {isLoading && <Loader />}\n\n      {!isLoading && !error && (\n        <PeopleTable\n          people={visiblePeoples}\n          selectedPersonSlug={slug}\n        />\n      )}\n\n      {!isLoading && error && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          {error}\n        </p>\n      )}\n    </>\n  );\n};\n","import { Person } from './types';\n\nexport const getDetailsOfParents = (people: Person[]): Person[] => {\n  const peopleMap = new Map<string, Person>();\n\n  people.forEach(person => {\n    peopleMap.set(person.name, person);\n  });\n\n  return people.map(person => {\n    if (person.motherName && person.fatherName) {\n      const mother = peopleMap.get(person.motherName);\n      const father = peopleMap.get(person.fatherName);\n\n      return {\n        ...person,\n        mother,\n        father,\n      };\n    }\n\n    return person;\n  });\n};\n","import { FC } from 'react';\n\nexport const PageNotFound: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { FC } from 'react';\nimport {\n  NavLink,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\n\nexport const App: FC = () => {\n  const navLinkClasses = (\n    { isActive }: { isActive: boolean },\n  ) => classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={navLinkClasses}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={navLinkClasses}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"*\" element={<PageNotFound />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}